//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tahi
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class db_a8d12b_amahmyEntities : DbContext
    {
        public db_a8d12b_amahmyEntities()
            : base("name=db_a8d12b_amahmyEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Country> Countries { get; set; }
        public DbSet<ElTahiAdmin> ElTahiAdmins { get; set; }
        public DbSet<ElTahiCategory> ElTahiCategories { get; set; }
        public DbSet<ElTahiPostComponent> ElTahiPostComponents { get; set; }
        public DbSet<ElTahiPostComponentRelation> ElTahiPostComponentRelations { get; set; }
        public DbSet<ElTahiPostImage> ElTahiPostImages { get; set; }
        public DbSet<ElTahiPostImagesRelation> ElTahiPostImagesRelations { get; set; }
        public DbSet<ElTahiPost> ElTahiPosts { get; set; }
        public DbSet<ElTahiPostVideo> ElTahiPostVideos { get; set; }
        public DbSet<ElTahiPostVideosRelation> ElTahiPostVideosRelations { get; set; }
        public DbSet<ElTahiProfileImage> ElTahiProfileImages { get; set; }
        public DbSet<ElTahiRole> ElTahiRoles { get; set; }
        public DbSet<ElTahiStatu> ElTahiStatus { get; set; }
        public DbSet<ElTahiSupplier> ElTahiSuppliers { get; set; }
        public DbSet<ELTahiTopSupplier> ELTahiTopSuppliers { get; set; }
        public DbSet<ELTahiTopUser> ELTahiTopUsers { get; set; }
        public DbSet<ElTahiType> ElTahiTypes { get; set; }
        public DbSet<ElTahiUser> ElTahiUsers { get; set; }
        public DbSet<sysdiagram> sysdiagrams { get; set; }
        public DbSet<ELTahiIngredient> ELTahiIngredients { get; set; }
        public DbSet<ElTahiPostRecipIngradient> ElTahiPostRecipIngradients { get; set; }
        public DbSet<ElTahiRecipeRelation> ElTahiRecipeRelations { get; set; }
        public DbSet<ElTahiRescipePost> ElTahiRescipePosts { get; set; }
        public DbSet<ElTahiSubRecipePostIngradient> ElTahiSubRecipePostIngradients { get; set; }
        public DbSet<ElTahiSupRescipePost> ElTahiSupRescipePosts { get; set; }
        public DbSet<ELTahiMeasuringUnit> ELTahiMeasuringUnits { get; set; }
        public DbSet<CookingMethod> CookingMethods { get; set; }
        public DbSet<ElTahiRecipePostMethod> ElTahiRecipePostMethods { get; set; }
        public DbSet<EltahiRecipeType> EltahiRecipeTypes { get; set; }
        public DbSet<TahiCuisine> TahiCuisines { get; set; }
        public DbSet<ElTahiRecipePostImagesRelation> ElTahiRecipePostImagesRelations { get; set; }
        public DbSet<ElTahiRestuarantType> ElTahiRestuarantTypes { get; set; }
        public DbSet<ELTahiJobPost> ELTahiJobPosts { get; set; }
        public DbSet<ELTahiPerantPost> ELTahiPerantPosts { get; set; }
        public DbSet<ElTahiOtherPost> ElTahiOtherPosts { get; set; }
        public DbSet<TahiSupInformation> TahiSupInformations { get; set; }
        public DbSet<ElTahiPostComment> ElTahiPostComments { get; set; }
        public DbSet<ElTahiPostScore> ElTahiPostScores { get; set; }
        public DbSet<Friendship> Friendships { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
